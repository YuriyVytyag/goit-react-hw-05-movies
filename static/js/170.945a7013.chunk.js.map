{"version":3,"file":"static/js/170.945a7013.chunk.js","mappings":"uPACaA,EAAUC,EAAAA,GAAAA,OAAH,yIAOPC,EAAsBD,EAAAA,GAAAA,IAAH,4HAMnBE,EAAUF,EAAAA,GAAAA,IAAH,wKAQPG,EAASH,EAAAA,GAAAA,IAAH,kEAINI,EAAaJ,EAAAA,GAAAA,IAAH,mJ,iBCkDvB,EA9DqB,WAAO,IAAD,IACjBK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,0BAAiBH,GAC7B,IAAMI,EAAW,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAgB5C,OAdAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAgBb,GAASc,MAAK,SAAAC,GAC5B,OAAOX,EAAWW,EAAIC,KACvB,GAGF,CAFC,MAAOC,GACPV,QAAQC,IAAIS,EACb,CACF,GAAE,CAACjB,IAI2C,KAAhCkB,OAAOC,KAAKhB,GAASiB,QAGlC,4BACE,SAAC1B,EAAD,WACE,SAAC,KAAD,CAAM2B,GAAIZ,EAAV,uBAEDS,OAAOC,KAAKhB,GAASiB,QACpB,UAACxB,EAAD,YACE,gBACE0B,IAAG,0CAAqCnB,EAAQoB,aAChDC,IAAKrB,EAAQsB,MACbC,MAAO,OAET,UAAC7B,EAAD,CAAS8B,UAAU,GAAnB,WACE,wBAAKxB,EAAQsB,SACb,wCAAgBG,KAAKC,MAA6B,GAAvB1B,EAAQ2B,cAAnC,QACA,sCACA,uBAAI3B,EAAQ4B,WACX5B,EAAQ6B,OAAOC,KAAI,SAAAC,GAClB,OAAO,SAACpC,EAAD,UAAwBoC,EAAMC,MAAjBD,EAAME,GAC3B,UAIL,IAEF,oDACA,UAACrC,EAAD,YACE,SAAC,KAAD,CAAMsB,GAAI,OAAQX,MAAO,CAAEC,KAAMF,GAAjC,mBAIA,SAAC,KAAD,CAAMY,GAAI,UAAWX,MAAO,CAAEC,KAAMF,GAApC,sBAGA,SAAC,KAAD,WAIJ,sDAEH,C,oKCzEK4B,EAAW,+BACXC,EAAU,mCAIHC,EAAW,WAEtB,OADaC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,qCAAkDC,GAEhE,EAEYG,EAAW,SAAAC,GAItB,OAHaF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iCACyBC,EADzB,iCACyDI,GAGvE,EAEY7B,EAAkB,SAAAuB,GAE7B,OADaI,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BD,EAA/B,oBAA6CE,GAE3D,EAEYK,EAAkB,SAAAP,GAE7B,OADaI,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BD,EAA/B,4BAAqDE,GAEnE,EAEYM,EAAiB,SAAAR,GAE5B,OADaI,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BD,EAA/B,4BAAqDE,GAEnE,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","components/helpers/Api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const BackBtn = styled.button`\n  margin-top: 10px;\n  margin-left: 10px;\n  color: #6e6ecb;\n  background-color: transparent;\n  border: none;\n`;\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  margin-left: 20px;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  justify-content: flex-start;\n  align-items: flex-start;\n  width: 600px;\n`;\nexport const Genres = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nexport const AddWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-left: 20px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  gap: 10px;\n`;\n","import { getMovieDetails } from 'components/helpers/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  MovieDetailsWrapper,\n  Wrapper,\n  Genres,\n  AddWrapper,\n  BackBtn,\n} from './MovieDetails.styled';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState({});\n  const location = useLocation();\n  console.log('ðŸš€ ~ location', location);\n  const detailsLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    try {\n      getMovieDetails(movieId).then(res => {\n        return setDetails(res.data);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n  // useEffect(() => {\n  //   getMovieDetails(movieId).then(setDetails);\n  // }, [movieId]);\n  const movie = !Object.keys(details).length === 0;\n\n  return movie ? (\n    <div>\n      <BackBtn>\n        <Link to={detailsLink}>Go back</Link>\n      </BackBtn>\n      {Object.keys(details).length ? (\n        <MovieDetailsWrapper>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${details.poster_path}`}\n            alt={details.title}\n            width={300}\n          />\n          <Wrapper className=\"\">\n            <h1>{details.title}</h1>\n            <p>User score: {Math.round(details.vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{details.overview}</p>\n            {details.genres.map(genre => {\n              return <Genres key={genre.id}>{genre.name}</Genres>;\n            })}\n          </Wrapper>\n        </MovieDetailsWrapper>\n      ) : (\n        ''\n      )}\n      <h2>Additional information</h2>\n      <AddWrapper>\n        <Link to={'cast'} state={{ from: detailsLink }}>\n          Cast\n        </Link>\n\n        <Link to={'reviews'} state={{ from: detailsLink }}>\n          Reviews\n        </Link>\n        <Outlet />\n      </AddWrapper>\n    </div>\n  ) : (\n    <p>There is no film you search</p>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '50b1b1393be81c5d35aa53448c7e33bf';\n// const URL = process.env.REACT_APP_URL;\n\n// axios.defaults.baseURL = URL;\nexport const getTrend = () => {\n  const data = axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovie = query => {\n  const data = axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return data;\n};\n\nexport const getMovieDetails = id => {\n  const data = axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieCredits = id => {\n  const data = axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieReview = id => {\n  const data = axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["BackBtn","styled","MovieDetailsWrapper","Wrapper","Genres","AddWrapper","movieId","useParams","useState","details","setDetails","location","useLocation","console","log","detailsLink","state","from","useEffect","getMovieDetails","then","res","data","error","Object","keys","length","to","src","poster_path","alt","title","width","className","Math","round","vote_average","overview","genres","map","genre","name","id","BASE_URL","API_KEY","getTrend","axios","getMovie","query","getMovieCredits","getMovieReview"],"sourceRoot":""}